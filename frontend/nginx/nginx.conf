upstream node {
    server node:3000;
}

#upstream php {
#    server php:9000;
#}

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com 10.100.6.123;

    # Редирект на HTTPS
    return 301 https://$host$request_uri;

    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl;
    http2 on;
    server_name yourdomain.com www.yourdomain.com 10.100.6.123;

    root /usr/share/nginx/html;

    # SSL сертификаты
    ssl_certificate /etc/nginx/ssl/10.100.6.123.crt;
    ssl_certificate_key /etc/nginx/ssl/10.100.6.123.key;

    # Настройки SSL (оставляем ваши текущие)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling off;
    ssl_stapling_verify off;
    ssl_verify_client off;

    # Заголовки безопасности (оставляем ваши текущие)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(self), payment=()";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' https://api.yourdomain.com; frame-src 'none'; object-src 'none'";
    add_header 'Access-Control-Allow-Origin' 'https://10.100.6.123';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
    add_header 'Access-Control-Allow-Credentials' 'true';

    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    log_subrequest on;

    # Главный location для React-приложения
    location / {
        try_files $uri /index.html;
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API прокси
    location /api/ {
        proxy_pass http://node/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        client_max_body_size 10M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;

        proxy_intercept_errors on;
        error_log /var/log/nginx/api_errors.log error;
    }

    # Статические файлы React
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Загрузки
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }

    # Обработка ошибок
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Защита скрытых файлов
    location ~ /\.(?!well-known) {
        deny all;
        return 404;
    }

    # Сжатие
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_vary on;
}
