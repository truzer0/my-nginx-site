upstream node {
    server node:3000;
}

upstream php {
    server php:9000;
}

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com 10.100.6.123;
    
    # Редирект остальных HTTP-запросов на HTTPS
    location = / {
    return 302 /login.html;
   }

    location / {
    try_files $uri $uri/ $uri.html $uri.php?$args =404;
    ...
   }

server {
    listen 443 ssl http2;
    listen [::]:443 ssl;
    http2 on;  
    server_name yourdomain.com www.yourdomain.com 10.100.6.123;
    
    root /usr/share/nginx/html;
    
    # SSL сертификаты
    ssl_certificate /etc/nginx/ssl/10.100.6.123.crt;
    ssl_certificate_key /etc/nginx/ssl/10.100.6.123.key;
    
    # Настройки SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling off;
    ssl_stapling_verify off;
    ssl_verify_client off;
    
    # Заголовки безопасности
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(self), payment=()";
    
    # Обновленная Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: http://10.100.6.123 https://10.100.6.123 http://10.100.6.123:3000 https://10.100.6.123:3000; font-src 'self'; connect-src 'self' https://api.yourdomain.com; frame-src 'none'; object-src 'none'";
        
    # CORS заголовки
    add_header 'Access-Control-Allow-Origin' 'https://10.100.6.123';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
    add_header 'Access-Control-Allow-Credentials' 'true';
    
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # Главный location /
    location = / {
    # Редирект только для корневого URL
    return 302 /login.html;
    }

    location / {
    # Безопасная обработка статических файлов
    try_files $uri $uri/ $uri.html $uri.php?$args =404;
    }

    # Запрет доступа к скрытым файлам (выносим в отдельный location)
    location ~ /\.(?!well-known) {
    deny all;
    return 404;
    }

    # Редирект с *.html на чистый URL
    location ~ ^/(.+)\.html$ {
        return 301 /$1;
    }
    
    # Проксирование API
    location /api/ {
        proxy_pass http://node/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        client_max_body_size 10M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Загрузки
    location /download/ {
        proxy_pass http://node/download/;
        
        valid_referers none blocked yourdomain.com *.yourdomain.com;
        if ($invalid_referer) {
            return 403;
        }
    }
    
    # Обработка PHP
    location ~ \.php$ {
        fastcgi_pass php;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        location ~* /uploads/.*\.php$ {
            deny all;
            return 403;
        }
        
        client_max_body_size 20M;
        fastcgi_param PHP_VALUE "upload_max_filesize=20M \n post_max_size=20M";
    }

    location /uploads/ {
    # Отключаем все редиректы для статики
    proxy_pass http://node;
    proxy_redirect off;
    
    # Важные заголовки
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Кэширование
    expires 30d;
    add_header Cache-Control "public, no-transform";
    
    # CORS
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, HEAD";
    }

    # Оптимизация статических файлов
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg|css|js)$ {
        expires 365d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }
    
    # Запрет доступа к sensitive файлам
    location ~* ^/(\.git|\.env|composer\.json|composer\.lock|package\.json|package-lock\.json|README\.md) {
        deny all;
        return 403;
    }
    
    # Обработка ошибок
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Сжатие
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_vary on;
}
